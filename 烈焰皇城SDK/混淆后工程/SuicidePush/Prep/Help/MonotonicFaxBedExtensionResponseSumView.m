
#import "NSString+Scruffy.h"








#import "MonotonicFaxBedExtensionResponseSumView.h"
#import "RepeatOrangeLooperObservingInterior.h"
#import "UIImageView+WebCache.h"


@interface MonotonicFaxBedExtensionResponseSumView()

@property (nonatomic, strong) UIView *view;

@property (nonatomic, strong) UIImageView *personPink;

@property (nonatomic, strong) UIButton *usedWorld;

@end

@implementation MonotonicFaxBedExtensionResponseSumView

- (instancetype)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        
        [self  uniformProtocolsUnableLocalFilmProgress];
        [self hitTopStackedActivityDiskOurView];
    }
    return self;
}

-(void)uniformProtocolsUnableLocalFilmProgress{
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(dogLastLessKinRotate:) name:UIApplicationDidChangeStatusBarFrameNotification object:nil];
}

-(void)hitTopStackedActivityDiskOurView{
    
    [self addSubview:({
        self.view = [[UIView alloc] init];
        self.view.layer.masksToBounds = YES;

        self.view.backgroundColor = [UIColor clearColor];
        self.view.frame = CGRectMake(0, 0, SCREENWIDTH, SCREENHEIGHT);
        self.view;
    })];
    

    
    [self.view addSubview:({
        self.personPink = [[UIImageView alloc] init];
        self.personPink.userInteractionEnabled = YES;
        self.personPink.frame = CGRectMake(0, 0, kWidth(320), kWidth(340));
        self.personPink.center = self.view.center;
        NSString * commentImgVStr = [NSString stringWithFormat:@"JUA=".relishKhaki,[[RepeatOrangeLooperObservingInterior manager].outputInfo objectForKey:@"Y29tbWVudF9pbWc=".relishKhaki] ];
        if (!kStringIsNull(commentImgVStr)) {
            [self.personPink sd_setImageWithURL:[NSURL URLWithString:commentImgVStr]];
        }
        self.personPink;
    })];
    
    [self addSubview:({
        self.usedWorld = [UIButton buttonWithType:UIButtonTypeCustom];
        self.usedWorld.backgroundColor = [UIColor clearColor];

        self.usedWorld.frame = CGRectMake(self.personPink.right-kWidth(25), self.personPink.top, kWidth(25), kWidth(25));
        [self.usedWorld addTarget:self action:@selector(thumbnailEqualDarwinTenIteration:) forControlEvents:UIControlEventTouchUpInside];
        self.usedWorld;
    })];
    
    UITapGestureRecognizer *imageTapAction = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(foodQuotePickAction:)];
    [self.personPink addGestureRecognizer:imageTapAction];
}

- (void)thumbnailEqualDarwinTenIteration:(UIButton *)sender {
    [self removeFromSuperview];

}

- (void)foodQuotePickAction:(UITapGestureRecognizer*)sender {
    NSString *App_ID =  [NSString stringWithFormat:@"JUA=".relishKhaki,[[RepeatOrangeLooperObservingInterior manager].outputInfo objectForKey:@"YXBwU3RvcmVJRA==".relishKhaki]];
 
    NSString *ratingsUrl = [NSString string];
        if (@available(iOS 11, *)){
            
            ratingsUrl = [NSString stringWithFormat:@"aXRtcy1hcHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9jbi9hcHAvaWQlQD9tdD04JmFjdGlvbj13cml0ZS1yZXZpZXc=".relishKhaki,App_ID];
        }else{
            
            ratingsUrl = [NSString stringWithFormat:@"aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL1dlYk9iamVjdHMvTVpTdG9yZS53b2Evd2Evdmlld0NvbnRlbnRzVXNlclJldmlld3M/aWQ9JUAmcGFnZU51bWJlcj0wJnNvcnRPcmRlcmluZz0yJnR5cGU9UHVycGxlK1NvZnR3YXJlJm10PTg=".relishKhaki,App_ID];
        }
    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:ratingsUrl]];
    [HitTypeLogHashManager finishingSwapSuspendedEscapedTailExtensionView];
    [self removeFromSuperview];
    
}


- (void)dogLastLessKinRotate:(NSNotification *)notice {
    [self setNeedsLayout];

}
@end
